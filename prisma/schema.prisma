generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String      @id @default(uuid())
  title       String
  photo       String
  price       Decimal
  description String
  cartItems   CartItem[]  
}

model Cart {
  id          String      @id @default(uuid())
  user        User        @relation("UserToCart", fields: [userId], references: [id], onDelete: Cascade)
  userId      String      @unique
  cartItems   CartItem[]  
  order       Order?      @relation(name: "CartToOrder")

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model CartItem {
  id        String   @id @default(uuid())
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade) // <-- added here
  cartId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  amount    Int
  color     String
  size      String
  comment   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        String   @id @default(uuid())
  cart      Cart     @relation(name: "CartToOrder", fields: [cartId], references: [id])
  cartId    String   @unique
  date      DateTime
  priceSum  Decimal
  comment   String?
  clientName String?
  email     String?
  address   String?

  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  name     String?   // <-- add this line
  address  String?   // <-- add this line
  role     Role      @default(USER)
  cart     Cart?     @relation("UserToCart")
  cartId   String?   @unique
  password Password?
}

model Password {
  id       String @id @default(uuid())
  hashedPassword String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String @unique
}